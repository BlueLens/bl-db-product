---
swagger: "2.0"
info:
  description: "This is a API document for Product DB"
  version: "0.0.1"
  title: "bl-db-product"
  contact:
    email: "master@bluehack.net"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "product.stylelens.io"
basePath: "/"
tags:
- name: "product"
  description: "product"
- name: "version"
  description: "product"
schemes:
- "http"
paths:
  /versions:
    post:
      tags:
      - "version"
      summary: "Add a new Version"
      description: ""
      operationId: "add_version"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Version object that needs to be added to the db."
        required: true
        schema:
          $ref: "#/definitions/Version"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddVersionResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.version_controller"
  /versions/{versionId}:
    get:
      tags:
      - "version"
      summary: "Gat Version by ID"
      description: "Returns a Version"
      operationId: "get_version_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "versionId"
        in: "path"
        description: "ID of Version to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetVersionResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      x-swagger-router-controller: "swagger_server.controllers.version_controller"
  /versions/latest:
    get:
      tags:
      - "version"
      summary: "Gat latest Version"
      description: "Returns a latest Version"
      operationId: "get_latest_version"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LatestVersionResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      x-swagger-router-controller: "swagger_server.controllers.version_controller"
  /products:
    post:
      tags:
      - "product"
      summary: "Added a new Product"
      description: ""
      operationId: "add_product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be added to the db."
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddProductResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
    put:
      tags:
      - "product"
      summary: "Update an existing Product"
      description: ""
      operationId: "update_product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be updated to the store"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        200:
          description: "successfully updated"
          schema:
            $ref: "#/definitions/UpdateProductResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
  /products/{productId}:
    get:
      tags:
      - "product"
      summary: "Find Product by ID"
      description: "Returns a single Product"
      operationId: "get_product_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of Product to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetProductResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
    delete:
      tags:
      - "product"
      summary: "Deletes a Product"
      description: ""
      operationId: "delete_product_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "Product id to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DeleteProductResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
  /products/hosts/{hostCode}:
    get:
      tags:
      - "product"
      summary: "Get Product by host_code"
      description: "Returns Products belongs to a Host"
      operationId: "get_products_by_hostcode"
      produces:
      - "application/json"
      parameters:
      - name: "hostCode"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetProductsResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "Host not found"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
  /products/hosts/{hostCode}/products/{productNo}:
    get:
      tags:
      - "product"
      summary: "Get Product by hostCode and productNo"
      description: "Returns Product belongs to a Host and productNo"
      operationId: "get_products_by_hostcode_and_product_no"
      produces:
      - "application/json"
      parameters:
      - name: "hostCode"
        in: "path"
        description: ""
        required: true
        type: "string"
      - name: "productNo"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetProductResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "Host or productNo not found"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
  /objects:
    post:
      tags:
      - "object"
      summary: "Added a new Object"
      description: ""
      operationId: "add_object"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Object that needs to be added to the db."
        required: true
        schema:
          $ref: "#/definitions/Object"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AddObjectResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.object_controller"
  /objects/{objectId}:
    get:
      tags:
      - "object"
      summary: "Find Object by ID"
      description: "Returns a single Object"
      operationId: "get_object_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "objectId"
        in: "path"
        description: "ID of Object to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetObjectResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      x-swagger-router-controller: "swagger_server.controllers.object_controller"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  SubImage:
    type: "object"
    properties:
      origin:
        type: "string"
      mobile:
        type: "string"
      main:
        type: "integer"
        format: "int32"
        description: "1: main, 0: sub image"
  Feedback:
    type: "object"
    properties:
      photo:
        type: "array"
        items:
          type: "string"
      text:
        type: "string"
      write_date:
        type: "string"
      total_count:
        type: "integer"
        format: "int32"
      photo_count:
        type: "integer"
        format: "int32"
      likes:
        type: "integer"
        format: "int32"
      writer:
        $ref: "#/definitions/Writer"
  Writer:
    type: "object"
    properties:
      id:
        type: "string"
      grade:
        type: "string"
      height:
        type: "integer"
        format: "int32"
      weight:
        type: "integer"
        format: "int32"
      my_size:
        type: "string"
      product_size:
        type: "string"
      color:
        type: "string"
  Version:
    type: "object"
    properties:
      id:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      name:
        type: "string"
  Product:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      host_code:
        type: "string"
      host_url:
        type: "string"
      host_name:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      class_code:
        type: "string"
        example: "n0100001"
      price:
        type: "integer"
        format: "int32"
      currency_unit:
        type: "string"
      product_url:
        type: "string"
      product_no:
        type: "string"
      nation:
        type: "string"
      main_image:
        type: "string"
        description: "image url"
      main_image_mobile_full:
        type: "string"
        description: "Mobile full size of image url"
      main_image_mobile_thumb:
        type: "string"
        description: "Mobile thumbnail size of image url"
      sub_images:
        type: "array"
        items:
          type: "string"
      sizes:
        type: "array"
        items:
          type: "string"
      discount_rate:
        type: "integer"
        format: "int32"
      feedback:
        type: "array"
        items:
          $ref: "#/definitions/Feedback"
      version:
        $ref: "#/definitions/Version"
  Object:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      product_id:
        type: "string"
      version:
        type: "string"
      class_code:
        type: "string"
      class_name:
        type: "string"
      storage:
        type: "string"
      bucket:
        type: "string"
      color:
        type: "integer"
        format: "int32"
      texture:
        type: "string"
      fabric:
        type: "string"
      shape:
        type: "string"
      part:
        type: "string"
      style:
        type: "string"
  AddProductResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/AddProductResponse_data"
  GetProductResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/Product"
  GetProductsResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Product"
  UpdateProductResponse:
    type: "object"
    properties:
      message:
        type: "string"
  DeleteProductResponse:
    type: "object"
    properties:
      message:
        type: "string"
  AddVersionResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/AddVersionResponse_data"
  GetVersionResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/Version"
  LatestVersionResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/Version"
  AddObjectResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/AddObjectResponse_data"
  GetObjectResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/Object"
  AddProductResponse_data:
    properties:
      product_id:
        type: "string"
  AddVersionResponse_data:
    properties:
      version_id:
        type: "string"
  AddObjectResponse_data:
    properties:
      object_id:
        type: "string"
externalDocs:
  description: "Find out more about BlueLens"
  url: "http://bluelens.io"
